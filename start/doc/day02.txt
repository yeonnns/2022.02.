# day02 

---------------------------------------------------------------------
자바를 이용해서 뭔가를 만들고 싶다면
	컴파일러가 필요하고 연계편집을 위한 도구가 필요하다.
	(이것은 JVM 이라고 부른다.)==>class실행 해줌
	이 두가지를 제공하는 도구를 다운 받아서 사용해야 한다.
	==> JDK가 바로 이 두가지 도구를 제공한다.
	물론 이 안에는 2가지 기능 말고도 필요한 각종 도구들이 패키지로 묶어서
	제공되고 있다.
	
========================================================================

자바 만든 프로그램을 실행하는 원리

	1. 자바 언어의 문법에 맞게 자연어로 프로그램을 만든다.
	
		이 프로그램은 저장되어야 한다.
		규칙이 
			1) 저장할 파일의 이름은 class 이름과 반드시 대소문자 까지 동일해야 한다.
			2) 확장자는 반드시 .java 로 만들어야 한다.
			
			예]
				class Test {
				'''
				}
				==> Test.java : 파일이름
				
	2. 만들어진 소스 파일은 컴파일을 해야 한다.
		그래야 컴퓨터가 이해 할 수 있는 기계어가 탄생되기 때문이다.
	 	컴파일 하는 방법(형식)
	 	javac 파일이름.java
	 	
	 	예] javac.Test.java
	 	이때 옵션을 붙여질 수도 있다.
	 	컴파일 단계를 거치면 확장자가 .class 인 파일이 만들어지는데 이 파일은 바이트 코드라고 한다.
	 	 ==> Test.class
	 	 
	 	 참고] cmd 창에서는 현재 폴더에 있는 도구만 시용할 수 있는 것이 원칙이다.
	 	 다른 폴더에 있는 도구를 사용하기 위해서는 연결을 시켜줘야 한다.
	 	 (해당 도구의 위치를 시스템이 인식하고 있으면 된다.)		
	 	 그 경로를 "path" 등록해주면 된다.
	 3. 만들어진 class 파일은 배포가 된다.
	 ==> 다른 사람에게 실행 하도록 줄 수 있다.
	 	실행하는 방법
	 	java 클래스 이름
	 	
용어 설명 ] 
	API
	==> 운영체제와 프로그램 사이에 원활한 작동을 위해서 양쪽을 연결해주는 도구
	라이브러리
	==> API가 사용하는 도구에 필요한 정보를 기억한 프로그램의 일종
	
	우리가 JDK를 설치하면 자바로 만든 프로그램과 해당 운영체제 사이를 원활하게 작동시키기 위한 API도 같이 설치 된다.
	
	물론 이것에 포함된 라이브러리도 같이 설치 된다.
	특정 명령을 수행하기 위해서는 어떤 절차를 거쳐야 하는지를 기록한 문서에 해당한다.
	
	예]
	if(){
	}
	==> 이명령을 실행하기 위해서는 절차가 필요하다. 그것을 기록해 놓은 문서를 라이브러리 라고 표현한다.
	
	결론적으로 API안에는 라이브러리가 반드시 포함되어야 한다.
	
----------------------------------------------------------------------

	주석]  소스 코드 실행에 영향 미치지 X 
	
	1. 단일행(한줄) 주석  
		//
	2. 다중행(여러줄) 주석
		/* 
		*/
	3. 배포 문서에 포한되는 주석
		/**
		*/ 
	@class 는 봐야할 class 알려준것.
	
/**
 * 이 클래스는 주석의 형식을 보여주시 위한 클래스
 * @author 김소연
 * @since  2022.02.23
 * @version v.1.0	
 *
 * 참고 ]
 * 		이 주석은 배포 문서에 포함되는 주석
 */
 
 --------------------------------------------------------------------
 
	 함수는 스스로 실행되는 경우가 없다. 반드시 누군가 호출해야 된다.
	 public static void main(String[] args) ==> 진입점 함수
	 함수이름([데이터]);
	 JVM(자바가상머신)에 의해서 실행. 
	
	클래스 안에는 필요한 함수나 필요한 변수를 포함 할 수 있다.
	클래스 안에 일반 명령은 절대 올 수 없다.
	이때 클래스에 포한되는 함수,변수를 멤버라고 부른다.
	멤버로 만들어진 변수를 "field"라 부른다.
	
	멤버중 속성이 static 인 멤버는 [ static 멤버] 라 부른다.
	1. static 영역에 실행되는 순간 미리 올려지는 멤버들이다.
	2. 해당 멤버가 소속된 클래스를new 시켜서 메모리에 올려놓지 않아도 사용 가능.
	3. static 영역에 올려지는 멤버는 같은 이름으로 여러개 올려질 수 없다.
		==>변수의 경우 하나를 공유해서 사용하게 되는 결과가 생긴다. 
	4. static 함수에서는 static멤버만(메모리에 기역되어 있는 멤버만) 사용
	
	public class Test{
	int num;
	float area; 	// 변수도 포함 할 수 있다.
	
	public void xyz(){
	}
	public void abc(){
	}				// 함수도 포할 할 수 있다.
	public static void main(String[] args);
			실행 내용
			
=====================================================================
상수와 변수

1] 상수
	 ==> 개발자가 프로그램에게 알려준는 (정보)데이터
	 ex) System.out.println("Hello");	
	 의 경우 "Hello"는 상수(Literal)이다.
	 상수는 "Literal Pool" 이라는 장소에 저장.
	 
	 ex) System.out.println("Hello"); 라고 명령을 하면
	 	1) 먼저 리터럴 풀에 "Hello"라는 데이터 자체를 기억시켜 놓고
	 		<==이떄 리터럴 풀은 메모리 영역이고, 기억되는 데이터는 주소를 가지게 된다.
		2) 리터럴 풀에 기억된 데이터를 꺼내서 출력하게 된다.
		
	 종류) 
	 	1) 정수형
	 		일반적인 소수점이 없는 숫자 (10진수, 8진수...)
	 	2) 실수형
	 		소수점이 존재하는 숫자 (소수방식, 지수방식)
	 	3) 논리형
	 		참과 거짓을 의미하는 데이터 (true, false)=> 2가지 이외는 불가
	 		boolean bool = true;
	 	4) 문자형
	 		오직 한글자로만 구성된 문자를 의미 (입력문자=>uni code 방식으로 변환)
	 		'a' - 97(97은 ascii코드값) 이라는 정수를 사용해서 기억.
	 		'\u0000' - 실제 유니코드 값으로 문자를 기억.(0000은 유니코드값)
	 	5) 문자열 형 - " "
	 		한글자 이상으로 구성된 문자를 의미한다.
	 		엄밀히 말하면 기본 상수는 아니지만 매우 빈번하게 사용 되어 포함
	 		
-------------------------------------------------------------------------

2] 변수
	변수의 필요성)
		개발자가 입력한 데이터는 일단 리터럴 풀에 저장
		==>프로그램이 리터럴 풀에 있는 데이터를 꺼내서 사용.
		
		리터럴 풀은 주소를 모르면 사용 X(반드시 알아야함)
		변수는 리터럴 풀에 저장된 데이터를 개발자가 필요한 순간에 다시 재사용 할 수 있도록 
		저장된 주소를 기억해 놓는 역할을 한다.
	
	stack의 특징)
		1. 매모리에 별칭을 붙여서 사용 할 수 있는 영역이다.(별칭은 개발자가 붙이는 것)
		2. 8개의 영억중에서 리터럴 풀 다음으로 가장 작은 영역을 운영체제에게서 배정 받는다. (많은양 데이터 소화 못함)
		
	리터럴 풀에 있는 데이터를 stack에서 기억하는 방법
		1. stack에 필요한 메모리를 할당 받는다.
		
		형식) 변수선언
			데이터 타입 	변수이름(stack에 붙이는 별칭);
			=> 데이터 타입의 기술은 (기억할 데이터의 형태,필요한 메모리 크기)를 의미
			=> 변수 이름만 기억하고 있으면 언제든지 이 변수가 기억하고 있는 데이터를 사용 할 수 있게 된다.
		
			데이터 타입에 의한 변수의 분류
				1. 기본형 변수
					-자바에서 제공해주는 기본 데이터 타입의 데이터를 기억할 변수
				stack영역에 메모리를 할당 받는 방법
				jwm에게 할당 받은 메모리 크기와 그 안에 저장 할 데이터 형태를 알려줘야 한다.
		
		
				기본 데이터 type(byte)
				boolean(1) -논리형
				char(2) - 문자 
	  			byte(1) *int(4) short(2) long(8) -정수
	  			float(4) *double(8) - 실수
				
				2. 참조형 변수
				 	-기본형 데이터 이외의 모든 데이터를 기억하는 변수(클래스를 기억하는 변수)

		2. 대입(기업) 연산자를 이용해서 필요한 데이터를 기억한다.
		
		형식) 변수이름 = 데이터;		
		ex) no = 10;
		
===========================================================================

자바 프로그램의 토큰 구분
==> 컴파일러가 토큰단위로 번역을 시도한다.
	따라서 개발자는 컴파일러가 번역하는 토큰을 구분해 줘야 한다.
	이것이 ";"이라는 기호를 이용해서 구분하게 된다.
	
	ex)
		int no1 = 10
		int no2 = 20;
		컴파일러는 두줄을 하나의 명령으로 인식 에러발생.
		
	; 대신 } 기호가 그 역할을 대신 할 수 있다.
	ex)
	if(조건식){
		실행문...
		}// 이 부분에서 토큰이 발생하게 된다.
		
		
	
	
		
		
		
		
	
	
	

	 			 
