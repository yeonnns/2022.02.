# day05

 if ] 조건이 맞을떄만 실행 할 조건문
	
		if(조건식){실행문}
	
 if - else ] 조건이 맞을때와 맞지 않을때 실행 할 조건문
 		
 		if(조건문){
 		조건 일치시 실행문
 		}else{
 		조건 불일치시 실행문
 		}
 		
 if - else if ] 조건이 두개 이상일 경우
 			
 		if ( 조건식1 ) {
		조건식1 일치시 실행문
		} else if(조건식2){
		조건식2 일치시 실행문
		}
		. . .
		else {
		모든 조건에 맞지 않을때 실행문
		}
		
 switch ] 인자값에 경우에 따라 실행 문장을 만드는 경우 
 		  break필수
 		
		 switch ( 인자값 =기준 ) {
		case 조건값1:
		실행문;
		break;
		case 조건값2:
		실행문;
		break;
		. . .
		default:
		실행문;
		}

 for ] 실행문 반복 수행할때 사용하는 제어문
 
 		for( 카운터변수 초기화; 조건식 ; 카운터변수 증감식){
		실행문
		}
		
		ex)
		for(int i = 0 ; i < 10 ; i++){
		System.out.println(i);
		}
		
 while ] for 반복문과 비교하면 카운터 변수 선언을 따.로. 위에 만들어줘야 함
 		 조건이 참이면 반복하는 명령
 		 
 		 
 		 카운터변수 선언;
		while( 반복조건 ){
		실행문;
		카운터변수 증감식;
		}
 		 
 do - while ] 다른 반복문과 비교해서 최소 한번은 실행
 			  조건이 맨 마지막에 옴
 			  
 		카운터변수 선언;
		do {
		실행문;
		카운터변수 증감식;
		} while ( 반복조건 );
 		 
 		 
 
===========================================================================		
 ramdom 숫자 발생시키기
	int num = (int)(Math.random()*(큰값-(작은값)+1)+(작은값));

 break 명령문
 	
 	==> 반복문과 switch문 종료 
 		가장 가까운 반복문 종료
 		
 continue 명령문
 
 	==> 출렵 없이 반복문을 다음 회차로 다시 반복

 배열 ]
 		: 타입이 같은 데이터를 일정 갯수만큼 하나로 관리하도록 만들어 놓은 자바의 데이터 타입
 			타입이 결정되어야 하고, 갯수도 결정이 되어야 만들 수 있다.
 	  단점 : 한번 사이즈(갯수)가 결정이 되면 사이즈(갯수)가 수정이 불가
 	  
 만드는 형식 : 데이터 타입[]    변수이름 = new 데이터타입[데이터갯수];
 		     데이터 타입[]	       변수이름 = {데이터1, 데이터2, ....};
 		     
 	배열 데이터 사용하는 방법
 		     데이터 타입     변수이름 = 배열변수[위치값]; (위치값(index)은 0부터 시작)
		
 배열갯수 알아내기]
 	==>
 	배열 갯수 알아내기 (길이는 0이 아닌 1부터 시작)
		int len = num.length;
	
 문자열에서 문자 추출 ] 
 	==>
 	문자열에서 문자 추출하고
		char ch = str.charAt(0);
	
	대문자 -> 소문자
	(char)(ch + ('a' - 'A'))
	
	소문자 -> 대문자 
	(char)(ch - ('a' - 'A'))
	
 		
		
		