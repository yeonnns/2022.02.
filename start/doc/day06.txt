# day06

Ex 12 

	스캐너 사용시
	Scanner sc = new Scanner(System.in);
	System.out.println
	int code = sc.nextInt();
	System.out.print("사용량 입력 : ");
	int sayong = sc.nextInt();
	
	
for 명령 참고 
	선조건 처리 명령
	for(;;) 처럼 안의 내용을 기술하지 않아도 무방하다.
	이떄 조건식은 항상 true처리
	
while 명령
	선조건 처리 명령
	for명령 과는 구분되게 형식내부에 카운터 변수 선언 부분이 없다.
	따라서 카운터 변수로 실행횟수를 제어하고자 한다면
	명령이 시작되기전에 카운터변수를 선언및 초기화를 해주고
	명령(블럭{}) 내부에서 증감식으로 증감해서 횟수 제어
	
do - while 명령
	후조건 처리명령
	약조건 하에서도 적어도 한번은 실행내용을 실행하는 반복문
	
참고 ]

	지역변수
		: 해당 블럭내에서만 사용 할 수 있는 변수.
		
	전역변수
		: 클래스내의 어디서든지 사용 할수 있는 변수.
		
========================================================================
flag 기법
	==> 프로그램을 실행하다 보면
	두가지 이상의 경우가 발생되는 순간이 존재한다.
	그 후에 어떤 경우가 발생했는지 알아보는 방법
	
	ex ]
		for(;;){
			실행내용1
			
			if(조건){
				break;
				}
				
				실행내용2
				}
				
				(1)
				실행내용1의 경우는 반복문의 마지막회차까지 실행됐는지 여부는 판별하기 어렵다.
				실행내용2의 경우도 마찬가지이다
				==> (1) 번 부분은 for 명령이 종료되면 실행되는 부분
				
				이떄 (1) 부분을 실행할 떄
				위의 반복문이 정상적으로 모두 반복해서 실행되었는지
				아니면 중간에 break 명령으로 종료가 되었는지를 
				판별해내는 기법
				
			방법 ]
				시작하기 전에 변수에 특정 데이터를 기억시켜놓고
				특정 순간이 발생하면 변수의 데이터를 변경시킨다.
				
				(1) 부분을 실행할 때 그 변수의 데이터를 살펴보면 
				위의 반복문이 정상적으로 모두 처리되었는지
				중간에 강제 종료되었는지를 확인할 수 있게된다.
				
================================================================================

레이블이 붙은 반복문

	사용방법 ]
		
		레이블 이름(loop) :
		for(;;){
			for(;;){
				실행내용
				if(){
					break 또는 continue	레이블이름(loop);
				}
			}
			}
			
	레이블을 사용한 제어는 반드시 소속 반복문에 한해서만 적용된다.
	
-------------------------------------------------------------------
continue 명령
	반복문에서만 사용되는 명령
	현재 반복을 중지하고 다음 반복을 처리하도록 하는것
	==> 즉, 현재 작업을 중지시키고 
		현재 작업은 무의미하므로 더이사 진행하지 말고
		다음 반복작업을 진행하도록 하는것.	
	
	주의사항 ] 
		반복 명령에 따라서 실행 위치가 달라진다.
		for( 카운터변수 초기화; 조건식 ; 카운터변수 증감식){
			if(){
			continue;
			}
		}
		
		이처럼 for 반복문의 경우는
		continue 명령을 만나면 증감식으로 실행을 진행한다.
		
		while(조건식){
		
			if(){
				continue;
				}
			}	
			위의 경우처럼 
			while 반복문의 경우는 continue 명령을 만나면
			반복문의 조건식을 실행한다.
			
		do{
			(1)
			continue;
			(2)
		}while(조건식(3));
		(4)
		
		(1) -> continue -> (3)       참 -> (1)
							거짓 -> (4)
							
		continue 명령 역시 감싸는 반복문에 레이블을 붙여서 제어할 수 있다.
							