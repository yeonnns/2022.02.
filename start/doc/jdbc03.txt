# jdbc03

BigDecimal
==> 자바의 정수로 표현할 수 없는 숫자를 사용하기 위한 클래스
	
	주로 데이터베이스와 연동할 때 사용한다.
	
	오라클의 데이터형태중 NUMBER 타입은 최대 자리수가 32자리까지 기억할 수 있다.
	그런데 자바에서는 최대 19자리까지 기억할 수 있다.
	만약 오라클에서 전달받은 숫자 데이터가 19자리를 넘어서는 숫자라면
	자바에서는 처리할 수 없으므로
	이런 유형의 데이터를 처리하기 위해서 만들어진 클래스이다.
	
	예 ]
		BigDecimal big = new BigDecimal("12345678901234567890");
		
===============================================================================================

형식화 클래스
==> 주로 처리된 결과를 보기좋게 출력하기 위한 목적으로 사용되어지는 클래스
	(형식을 정해서 그 형식에 맞는 문자열을 만들어주는 클래스...)
	
	1. DecimalFormat
		==> 숫자데이터를 형식을 정해서 그 형식에 맞도록 문자열로 만들어주는 클래스
		
		생성방법 ]
			
			DecimalFormat(String pattern)
			을 주로 이용한다.
			==> 어떤 모양으로 변환시킬지를 알려주는 패턴을 입력하면서 만들어준다.
			
		주요함수 ]
			format(double number)
			==>  숫자를 원하는 형태로 변환시켜주는 함수
			
		참고 ]
			패턴 지정법
				
				0		한자리 숫자를 의미하고 무효숫자도 0으로 표시한다.
				#		한자리 숫자를 의미하고 무효숫자는 표시하지 않는다.
				.		소수점의 위치
				,		3자리마다 , 표시를 하도록 한다.
				-		음수일 경우 - 부호의 위치를 알려준다.
				E		실수일 경우 지수 형태로 표시하도록 한다.
				:		패턴을 구분
						(양수일 경우와 음수일 경우를 구분해서 처리할 경우 사용)
				%		백분율을 표시
				\u00A4	화폐단위를 표시
				
	2. SimpleDateFormat
		==> 처리 결과중 날짜를 형식을 정해서 문자열로 만들기 위한 클래스
		
		생성방법과 주요함수는 DecimalFormat 과 동일하다.
		
		패턴 지정법
			
			G	: 연대(BD, AD)
			y	: 년도						*
			M	: 월(1 ~ 12월)				*
			w	: 년의 몇번째 주
			W	: 월의 몇번째 주			*
			D	: 년의 몇번째 일
			d	: 월의 몇번째 일			*
			F	: 월의 몇번째 요일(1 ~5)
			E	: 요일						*
			a	: 오전/오후(am/pm)			*
			H	: 시간(0 ~ 23)				*
			h	: 시간(1 ~ 12)				
			k	: 시간(1 ~ 24)
			K	: 시간(0 ~ 11)				*
			m	: 분(0 ~ 59)				*
			s	: 초(0 ~ 59)				*
			S	: 천분의 일초(0 ~ 999)
			z	: Time Zone(General time zone)
			Z	: Time Zone(RFC 822 time zone)
			'	: escape문자(특수문자를 표현할 때 사용)
			
			
		예 ]
			SimpleDateFormat form = new SimpleDateFormat("yyyy년 MM월 dd일 HH:mm:ss");
			
	3. ChoiceFormat
		==> switch 등을 이용해야 하는 경우에 이것을 간소화 시키기 위한 방식
			즉, 특정 범위의 값은 특정 문자열로 교체해서 문자열로 변환시키는 기능을 가진 클래스
			
		생성방법 ]
			ChoiceFormat(double[] limits, String[] formats)
				
				double[] limits	: 치환될 범위
				String[] formats : 치환할 문자
				
	4. MassageFormat
		==> 특정 문자열에 특정위치에 내용만 변경되는 경우
			문자열 전체를 만들지 않고 
			변경되는 내용만 변화시켜서
			하나의 문자열을 만들어내는 클래스
			
			"INSERT INTO emp VALUES( 1234, '제니', 'jennie', ... )"
			"INSERT INTO emp VALUES( 1235, '리사', 'lisa', ... )"
			"INSERT INTO emp VALUES( 1236, '로제', 'rose', ... )"
			"INSERT INTO emp VALUES( 1237, '지수', 'jisoo', ... )"
			
			이런 문자열을 여러개 만들 경우 
			처음부터 다시 만들어야 하는 불편함이 있다.
			이것을 해결하기 위한 클래스이다.
			
			참고 함수 ]
				
				parse(String source)
				==> 주어진 문자열 중에서 실제 변화되는 데이터 부분만 알아내는 함수